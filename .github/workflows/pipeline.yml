name: CI/CD - Book Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -----------------
  # Lint and Test Job
  # -----------------
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Caching for future pipelines
      # - name: Cache pip packages
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Code Style & Linting
      - name: Run linting
        run: flake8 app/app.py tests/

      # Unit Testing Framework
      - name: Run tests
        run: PYTHONPATH=. pytest --maxfail=1 --disable-warnings -q

      # Security Vulnerability Scan
      # - name: Run security checks
      #  run: bandit -r .

  # -----------------
  # Docker Build Job
  # -----------------
  docker-build:
    needs: lint-and-test  # Wait for tests to pass
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/book-service:latest
